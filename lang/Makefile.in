CC = gcc
LD = gcc
AR = ar rcs

MAJ = 0
MIN = 1
REV = 0

LIB = libmuselang.a
SO  = libmuselang.so
HDR = muselang.h

OBJ = src/env.o \
      src/eval.o \
      src/expr.o \
      src/parse.o \
      src/token.o \
      src/value.o \

INC = src/defs.h \
      \
      src/env.h \
      src/eval.h \
      src/expr.h \
      src/parse.h \
      src/token.h \
      src/value.h \
     
# build rules

all: $(LIB) $(SO) $(HDR)

$(LIB): $(OBJ)
	$(AR) $@ $^

$(SO): $(OBJ)
	$(LD) -o $@ -shared $^ $(LDFLAGS)

%.o: %.c Makefile src/common.h src/debug.h $(INC)
	$(CC) -c -o $@ $< $(CFLAGS)

$(HDR): $(INC) Makefile
	rm -f $@
	printf '#ifndef LIBMUSELANG_H\n#define LIBMUSELANG_H\n' >> $@
	for inc in $(INC) ; do sed -e'1,2d' -e'$$d' $$inc >> $@ ; done
	printf '#endif\n' >> $@

Makefile: configure Makefile.in $(wildcard config.args)
	./configure $(ARGS)

# clean rules

clean:
	rm -rf $(LIB) $(SO) $(HDR) $(OBJ)

# install rules

install: all
	install --mode 0644 -D $(HDR) $(INCDIR)/$(HDR)
	install --mode 0644 -D $(LIB) $(LIBDIR)/$(LIB)
	install --mode 0755 -D $(SO) $(LIBDIR)/$(SO).$(MAJ).$(MIN).$(REV)
	ln -fs $(SO).$(MAJ).$(MIN).$(REV) "$(LIBDIR)/$(SO)"
	ln -fs $(SO).$(MAJ).$(MIN).$(REV) "$(LIBDIR)/$(SO).$(MAJ)"

# phony

.PHONY: all install clean run

# extra includes

-include Makefile.user Makefile.proj
